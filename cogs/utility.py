

import discord
from discord.ext import commands
from discord import app_commands
from gtts import gTTS
import tempfile
import os
import logging

logger = logging.getLogger(__name__)

class Utility(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @app_commands.command(name="speak", description="‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)")
    @app_commands.describe(text="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏û‡∏π‡∏î")
    async def speak(self, interaction: discord.Interaction, text: str):
        await interaction.response.defer(ephemeral=True)
        try:
            if len(text) > 200:
                await interaction.followup.send("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 200 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)", ephemeral=True)
                return
                
            voice_client = interaction.guild.voice_client
            if not voice_client:
                await interaction.followup.send("‡∏ö‡∏≠‡∏ó‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ", ephemeral=True)
                return
                
            if voice_client.is_playing():
                await interaction.followup.send("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ", ephemeral=True)
                return

            with tempfile.NamedTemporaryFile(suffix=".mp3", delete=False) as temp_file:
                speech_file = temp_file.name
                
            try:
                tts = gTTS(text=text, lang='th', slow=False)
                tts.save(speech_file)
                
                source = discord.FFmpegPCMAudio(speech_file)
                
                def cleanup_after_speak(error):
                    if error:
                        logger.error(f"TTS playback error: {error}")
                    try:
                        os.unlink(speech_file)
                    except:
                        pass
                        
                voice_client.play(source, after=cleanup_after_speak)
                
                await interaction.followup.send(f"üó£Ô∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏π‡∏î: '{text}'", ephemeral=False)
                
            except Exception as e:
                logger.error(f"TTS error: {e}")
                try:
                    os.unlink(speech_file)
                except:
                    pass
                await interaction.followup.send("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ", ephemeral=True)
        except Exception as e:
            logger.error(f"Unexpected error in speak command: {e}")
            await interaction.followup.send("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ", ephemeral=True)

    @app_commands.command(name="wake", description="‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏õ‡∏õ‡∏•‡∏∏‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô")
    @app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏∏‡∏Å", message="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö)")
    async def wake(self, interaction: discord.Interaction, user: discord.Member, message: str = "‡∏ï‡∏∑‡πà‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß!"):
        if user.bot:
            await interaction.response.send_message("‡∏õ‡∏•‡∏∏‡∏Å‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ô‡∏∞!", ephemeral=True)
            return
        try:
            embed = discord.Embed(
                title="‚è∞ ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏°‡∏≤‡∏õ‡∏•‡∏∏‡∏Å!",
                description=f"**{interaction.user.display_name}** ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå **'{interaction.guild.name}'** ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ß‡πà‡∏≤:\n\n> {message}",
                color=discord.Color.gold()
            )
            await user.send(embed=embed)
            await interaction.response.send_message(f"‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏õ‡∏•‡∏∏‡∏Å {user.mention} ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
        except discord.Forbidden:
            await interaction.response.send_message(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡∏´‡∏≤‡∏Å {user.mention} ‡πÑ‡∏î‡πâ (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏õ‡∏¥‡∏î DM ‡πÑ‡∏ß‡πâ)", ephemeral=True)

async def setup(bot: commands.Bot):
    await bot.add_cog(Utility(bot))

